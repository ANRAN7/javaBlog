package net.peace.io;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.DataInputStream;
import java.io.DataOutput;
import java.io.DataOutputStream;
import java.io.EOFException;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Date;
/*
 *此类用来测试过滤流，包括buff和data流，以及reader和writer
 */
public class StreamBUff {
	/*
	*********************************************************************************************************
	*                                        testbuff()
	*
	* Description ： This function test BufferedInputStream and BufferedOutputStream.
	*
	* Arguments   : None.
	*
	* Returns     : None
	*
	* Note(s)     : None
	* 
	* Author      ：peace 
	*********************************************************************************************************
	*/
	public void testbuff(){
		System.out.println("test buff");
		long starttime=new java.util.Date().getTime();
		BufferedInputStream Bio=null;
		BufferedOutputStream Bos=null;
		try {
			//Arguments InputStream
			Bio=new BufferedInputStream(new FileInputStream("./1.txt"));
			//Arguments  OutputStream
			Bos=new BufferedOutputStream(new FileOutputStream("./2.txt"));
			//Buffer
			byte[] buf=new byte[1024];
			int len=0;
			//read
			while((len=Bio.read(buf))>=0){
				//copy
				Bos.write(buf,0,len);
			}
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally {
			//releases any system resources 
			if(Bio!=null){
				try {
					Bio.close();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			if(Bos!=null){
				try {
					Bos.close();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		}
		//test time
		long endtime=new java.util.Date().getTime();
		System.out.println((endtime-starttime));
	}
	/*
	*********************************************************************************************************
	*                                        testData()
	*
	* Description ： This function test DataInputStream and DataOutputStream.
	*
	* Arguments   : None.
	*
	* Returns     : None
	*
	* Note(s)     : None
	* 
	* Author      ：peace 
	*********************************************************************************************************
	*/
	public void testData(){
		System.out.println("test Data");
		//定义输出输入流
		DataInputStream dio=null;
		DataOutputStream dos=null;
		//先创建需要操作的文件
		File f=new File("./1.data");
		try {
			f.createNewFile();
		} catch (IOException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		try {
			
			dio=new DataInputStream(new FileInputStream("./1.data"));
			dos=new DataOutputStream(new FileOutputStream("./1.data"));
			//向指定文件写入整数值
			dos.writeInt(11);
			dos.writeInt(22);
			dos.writeInt(66);
			dos.writeInt(55);
			dos.writeInt(44);
			dos.writeInt(33);
			
			int len=0;
			/*
			 * 读出整数值，读到最后会产生EOFException异常。
			 */
			while((len=dio.readInt())>=0){
				System.out.println(len);
			}
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		/*
		 * 扑捉EOFException异常，必须在io异常前面，因为EOFException继承自io异常；
		 */
		catch (EOFException e){

			System.out.println("end");
		}catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		finally {
			if(dio!=null){
				try {
					dio.close();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			if(dos!=null){
				try {
					dos.close();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		}
	}
	public void testReader(){
		System.out.println("测试字符流");
		BufferedReader bf=null;
		PrintWriter pw=null;
		try {
			pw=new PrintWriter(new BufferedWriter(new FileWriter("./writer.txt")));
			pw.println("peace 22 170");
			pw.println("rong 21 165");
			bf=new BufferedReader(new FileReader("./writer.txt"));
			String str;
			while((str=bf.readLine())!=null){
				System.out.println(str);
			}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally {
			if(pw!=null){
				pw.close();
			}
			if(bf!=null){
				try {
					bf.close();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		}
	}
	public static void main(String[] args) {
		StreamBUff streamBUff=new StreamBUff();
		//test buff
		streamBUff.testbuff();
		//test data
		streamBUff.testData();
		//test 字符流
		streamBUff.testReader();
	}

}
