package com.rlovep.serlvet;

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet implementation class CookieDemo
 */
@WebServlet("/CookieDemo")
public class CookieDemo extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

		//1.创建cookie对象
		Cookie cookie=new Cookie("name", "peace");
		Cookie cookie2=new Cookie("name", "sisi");
		//2.设置cookie的有效路径，默认情况下有效路径在当前web应用下。/Httpser
		cookie2.setPath("/Httpser2");
		/**
		 * 2)设置cookie的有效时间
		 * 正整数：表示cookie数据保存浏览器的缓存目录（硬盘中），数值表示保存的时间。
			负整数：表示cookie数据保存浏览器的内存中。浏览器关闭cookie就丢失了！！
			零：表示删除同名的cookie数据
		 */
		//cookie2.setMaxAge(-1);//cookie2保存在内存
		cookie.setMaxAge(100);//设置为100s
		response.addCookie(cookie);
		response.addCookie(cookie2);
		//接收cookie的信息；
		Cookie[] cookies = request.getCookies();
		//注意：判断null,否则空指针
		if(cookies!=null){
			//遍历
			for(Cookie c:cookies){
				String name = c.getName();
				String value = c.getValue();
				String path=c.getPath();
				int age=c.getMaxAge();
				System.out.println(name+"="+value);
				System.out.println("path:"+path);
				System.out.println("age:"+age);
			}
		}else{
			System.out.println("没有接收cookie数据");
		}
	}
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doGet(request, response);
	}

}
